#pragma once

// Standard libraries
#include <array>
#include <atomic>
#include <cassert>
#include <chrono>
#include <csignal>
#include <cstdint>
#include <thread>
#include <iostream>
#include <fstream>

// Linux or POSIX specific
#include <fcntl.h>
#include <linux/gpio.h>
#include <sys/ioctl.h>
#include <sys/poll.h>
#include <unistd.h>

namespace sl
{
	template <typename T, size_t TS, size_t SS>
	constexpr void clone(T(&target)[TS], const T(&source)[SS])
	{
		static_assert(TS >= SS, "Target size is smaller than destination!");
		
		for (size_t i = 0; i < SS; ++i)
		{
			target[i] = source[i];
		}
	}
}